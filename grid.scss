*{
  box-sizing: border-box;
}

//------------------------------------------------------------------------------
//  Grid Defaults - 1400px Wide
//  (12 columns * 80px) + (11 gutters * 40px) = 1440px
//------------------------------------------------------------------------------

$column-width: 80px;
$gutter-width: 40px;
$columns: 12;
$max-width: 1440px;
$total-width: 100%;


//------------------------------------------------------------------------------
//  Utility function â€” you should never need to modify this
//------------------------------------------------------------------------------

@function gridsystem-width($columns:$columns) {
  @return ($column-width * $columns) + ($gutter-width * $columns);
}

//------------------------------------------------------------------------------
//  Flexbox Layout
//  Sets up flexbox container & uses @include flexcolumn(x); to apply flex-basis
//------------------------------------------------------------------------------

@mixin row{
  display: flex;
  flex-wrap: wrap;
  width: $total-width;
  max-width: $max-width;
  margin: 0 auto;
  padding: 20px;
}

@mixin column($x,$columns:$columns){
  flex: 0 0 $total-width*(((($gutter-width+$column-width)*$x)-$gutter-width) / gridsystem-width($columns));
  margin: 0 $total-width*(($gutter-width*.5)/gridsystem-width($columns));
}

@mixin fixedColumn($x,$columns:$columns){
  flex: 0 0 calc( #{$total-width*(((($gutter-width+$column-width)*$x)) / gridsystem-width($columns))} - #{$gutter-width} );
  margin: 0 $gutter-width*.5;
}


// Sample for responsive grids
.container{

  @include row();

  &-item{
    flex: 1;
    height: 100px;
    background: red;
  }
  .left,
  .right,
  .another-class,
  .a-different-class{
    @include column(12);
  }

  @media screen and (min-width:32em){
    .left{
      @include column(4);
    }

    .right{
      @include column(8);
    }

    .another-class{
      @include column(3);
    }

    .a-different-class{
      @include column(6);
    }
  }
}